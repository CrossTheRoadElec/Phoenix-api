import org.gradle.internal.os.OperatingSystem

plugins {
  id 'cpp'
  id 'java'
  id 'edu.wpi.first.wpilib.versioning.WPILibVersioningPlugin' version '2.1'
  id 'edu.wpi.first.NativeUtils' version '1.7.0'
  id 'edu.wpi.first.GradleVsCode' version '0.3.0'
  id 'google-test-test-suite'
}

apply from: "locations.gradle"
apply from: "options.gradle"

apply from: 'config.gradle'

ext.sharedFrcConfigs = [CTRE_Phoenix: ['linux:athena']]
ext.sharedConfigs = [CTRE_Phoenix: []]
ext.staticTestConfigs = [CTRE_PhoenixTest: []]


apply from: 'dependencies.gradle'

model {
  exportsConfigs {
      CTRE_Phoenix(ExportsConfig) {
          x86ExcludeSymbols = ['_CT??_R0?AV_System_error', '_CT??_R0?AVexception', '_CT??_R0?AVfailure',
                                '_CT??_R0?AVbad_cast',
                                '_CT??_R0?AVruntime_error', '_CT??_R0?AVsystem_error', '_CTA5?AVfailure',
                                '_TI5?AVfailure']
          x64ExcludeSymbols = ['_CT??_R0?AV_System_error', '_CT??_R0?AVexception', '_CT??_R0?AVfailure',
                                '_CT??_R0?AVbad_cast',
                                '_CT??_R0?AVruntime_error', '_CT??_R0?AVsystem_error', '_CTA5?AVfailure',
                                '_TI5?AVfailure']
      }
  }
  components {
    CTRE_Phoenix(NativeLibrarySpec) {
      sources {
        cpp {
          source {
            srcDirs 'src/main/native/cpp'
            include '**/*.cpp'
          }
          exportedHeaders {
            srcDirs 'src/main/native/include'
          }
        }
      }
    }
  }
  testSuites {
    CTRE_PhoenixTest(GoogleTestTestSuiteSpec) {
      for(NativeComponentSpec c : $.components) {
        if (c.name == 'CTRE_Phoenix') {
          testing c
          break
        }
      }
      sources {
        cpp {
          source {
            srcDirs 'src/test/native/cpp'
            include '**/*.cpp'
          }
          exportedHeaders {
            srcDirs 'src/test/native/include', 'src/main/native/include'
          }
        }
      }
    }
  }
  binaries {
    withType(GoogleTestTestSuiteBinarySpec) {
      if (it.targetPlatform.architecture.name == 'athena' || it.targetPlatform.architecture.name == 'raspberry') {
        it.buildable = false
        return
      }    

      lib library: 'CTRE_Phoenix', linkage: 'static'
    }
  }
}


apply from: 'publish.gradle'

wrapper {
  gradleVersion = '4.9'
}
